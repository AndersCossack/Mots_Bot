from aiogram import F, Router
from aiogram.types import Message, CallbackQuery, ReplyKeyboardRemove
import asyncio

call_router = Router()

import keyboards.inline_kb as ikb


@call_router.message(F.text == "–ú–µ–Ω—é")
async def menu(message: Message):
    await message.answer("–ß–∏–º –±—É–¥–µ–º–æ –±–æ–º–±–∏—Ç–∏?üòè", reply_markup=ikb.inline_kb)


@call_router.message(F.text == "–ü—ñ–¥—Ç—Ä–∏–º–∫–∞")
async def help(message: Message):
    await message.answer("–í–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞?")


@call_router.message(F.text == "–ü—Ä–æ –º–µ–Ω–µ")
async def about_me(message: Message):
    await message.answer("–Ø –±–æ—Ç, —è–∫–∏–π –¥–æ–ø–æ–º–∞–≥–∞—î –≤–∞–º —É —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—ñ. –Ø –º–æ–∂—É –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ –Ω–∞ –≤–∞—à—ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è —Ç–∞ –¥–æ–ø–æ–º–∞–≥–∞—Ç–∏ –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é.")


@call_router.message(F.text == "–ù–∞–∑–∞–¥")
async def back(message: Message):
    await message.answer("–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è –Ω–∞–∑–∞–¥ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é.")

@call_router.message(F.text == '–ü—Ä–∏–±—Ä–∞—Ç–∏ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É')
async def remove_keyboard(message: Message):
    await message.answer('–ü—Ä–∏–±—Ä–∞–Ω–æ', reply_markup=ReplyKeyboardRemove())

@call_router.callback_query(F.data == '–º–∞—Å–∫–≤–∞')
async def mascfa(callback: CallbackQuery):
    await callback.answer('–í–ñ–∂–∂–ñ–∂–ñ–∂–∂–ñ–∂–∂...')
    await asyncio.sleep(1.5)
    await callback.message.answer_animation(
        animation='https://tenor.com/view/moskva-fire-cat-gif-25387626'
    )
    await asyncio.sleep(1)
    await callback.message.answer('–ü—Ä—è–º–æ –ø–æ –∫—Ä–µ–º–ª—é!')

@call_router.callback_query(F.data == "lutiy")
async def lutiy(callback: CallbackQuery):
    await callback.answer('–ó–∞–ø—Ä–∞–≤–ª—è—î–º–æ...')
    await asyncio.sleep(1.5)
    await callback.message.answer("–ó–∞–ø—É—Å—Ç–∏—Ç–∏ –ø–æ:", reply_markup=await ikb.city_list())
    #await callback.message.answer("–í—Ä–∞–∂–µ–Ω—ñ –ø–æ–∑–∏—Ü—ñ—ó: \n–º–∞—Å–∫–≤–∞\n—Å–∞—Ä–∞—Ç–∞—Ñ\n–©–µ —è–∫–µ—Å—å —Å–µ–ª–æ")


@call_router.callback_query(F.data == "trembita")
async def trembita(callback: CallbackQuery):
    await callback.answer('–ù–∞—Ü—ñ–ª—é—î–º–æ...')
    await asyncio.sleep(1.5)
    await callback.message.answer("–í—Ä–∞–∂–µ–Ω—ñ –ø–æ–∑–∏—Ü—ñ—ó: \n–ü—Ä–∏–ª–µ—Ç—ñ–ª–æ –ø–æ –∫—Ä–µ–º–ª—é")


@call_router.callback_query(F.data == "gus")
async def gus(callback: CallbackQuery):
    await callback.answer('–ü—ñ–¥–≥–æ–¥–æ–≤—É—î–º–æ –≥—É—Å–∞–∫—ñ–≤...')
    await asyncio.sleep(1.5)
    await callback.message.answer("–í—Ä–∞–∂–µ–Ω—ñ –ø–æ–∑–∏—Ü—ñ—ó: \n–ì—É—Å–∞–∫–∏ –∑–∞–≥–∏–¥–∏–ª–∏ —Ä–∞—Å—ñ—è–Ω")
